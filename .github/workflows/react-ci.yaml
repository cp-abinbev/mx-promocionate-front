name: react-ci
on:
  push:
    branches:
      - dev
      - main
      - staging
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Install dependencies
        run: pnpm install
        env:
          CI: true
      - name: Generate build
        run: pnpm run build-${{ github.ref_name }}
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v3
        with:
          name: react-app
          path: dist
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get artifact
        uses: actions/download-artifact@v3
        with:
          name: react-app
          path: ./
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Obtain branch name
        id: branch
        run: |
          branch_ref="${{ env.GITHUB_HEAD_REF_SLUG_URL }}";
          if  [[ $branch_ref == "" ]]; then
            branch_ref="${{ env.GITHUB_REF_SLUG }}"
          fi
          output=$branch_ref
          if  [[ $branch_ref == "feature"* ]]; then
            output="dev";
          elif [[ $branch_ref == "release"* ]]; then
            output="stage";
          elif [[ $branch_ref == "hotfix"* ]]; then
            output="main";
          fi
          echo "name=$output" >> $GITHUB_OUTPUT;
      - id: string
        uses: ASzc/change-string-case-action@v3
        with:
          string: "${{ steps.branch.outputs.name }}"
      - name: Prepare Outputs
        id: prepare-step
        run: >
          echo "aws_s3_bucket_name=AWS_S3_BUCKET_NAME_${{
          steps.string.outputs.uppercase }}" >> $GITHUB_OUTPUT;
          echo "aws_s3_access_key_id=AWS_ACCESS_KEY_ID_${{
          steps.string.outputs.uppercase }}" >> $GITHUB_OUTPUT;
          echo "aws_s3_secret_access_key=AWS_SECRET_ACCESS_KEY_${{
          steps.string.outputs.uppercase }}" >> $GITHUB_OUTPUT;
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: "--acl public-read --follow-symlinks --delete"
        env:
          AWS_S3_BUCKET: "${{ secrets[steps.prepare-step.outputs.aws_s3_bucket_name] }}"
          AWS_ACCESS_KEY_ID: "${{ secrets[steps.prepare-step.outputs.aws_s3_access_key_id] }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[steps.prepare-step.outputs.aws_s3_secret_access_key] }}"
          SOURCE_DIR: ./
      - name: invalidate
        if: github.ref == 'refs/heads/main'
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          PATHS: "/*"
          AWS_REGION: "us-east-1"
          DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
          AWS_ACCESS_KEY_ID: "${{ secrets[steps.prepare-step.outputs.aws_s3_access_key_id] }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets[steps.prepare-step.outputs.aws_s3_secret_access_key] }}"
